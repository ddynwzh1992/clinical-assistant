apiVersion: apps/v1
kind: Deployment
metadata:
  name: litellm-graviton
spec:
  replicas: 1
  selector:
    matchLabels:
      app: litellm-graviton
  template:
    metadata:
      labels:
        app: litellm-graviton
    spec:
      nodeSelector:
        kubernetes.io/arch: arm64
      containers:
      - name: litellm
        image: ghcr.io/berriai/litellm:main-latest
        args:
          - "--config"
          - "/app/config.yaml"
          - "--port"
          - "4000"
          - "--num_workers"
          - "1"
        ports:
        - containerPort: 4000
        env:
        - name: LITELLM_MASTER_KEY
          valueFrom:
            secretKeyRef:
              name: litellm-secret
              key: master-key
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: secret-access-key
        - name: AWS_DEFAULT_REGION
          value: MY_REGION
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
        volumeMounts:
        - name: config
          mountPath: /app/config.yaml
          subPath: config.yaml
      volumes:
      - name: config
        configMap:
          name: litellm-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: litellm-config
data:
  config.yaml: |
    model_list:
      # vLLM Models     
      - model_name: llama3-8b
        litellm_params:
          model: openai/meta-llama/Llama-3.1-8B-Instruct
          api_base: http://llama-vllm-neuron:8080/v1
          api_key: "dummy-key"  # vLLM doesn't require a real API key
          supports_function_calling: true 

      # Amazon Bedrock Models
      - model_name: claude-4-sonnet
        litellm_params:
          model: bedrock/apac.anthropic.claude-sonnet-4-20250514-v1:0
          aws_access_key_id: os.environ/AWS_ACCESS_KEY_ID
          aws_secret_access_key: os.environ/AWS_SECRET_ACCESS_KEY
          aws_region_name: os.environ/AWS_REGION_NAME
    
    general_settings:
      master_key: os.environ/LITELLM_MASTER_KEY
      database_url: null
      store_model_in_db: false
      
    # Optional: Add logging and monitoring
    litellm_settings:
      success_callback: ["langfuse"]
      failure_callback: ["langfuse"]
      set_verbose: true
---
apiVersion: v1
kind: Secret
metadata:
  name: litellm-secret
type: Opaque
data:
  master-key: eW91ci1zZWNyZXQta2V5  # base64 encoded "your-secret-key"
---
apiVersion: v1
kind: Secret
metadata:
  name: aws-credentials
type: Opaque
data:
  # Base64-encoded AWS credentials
  access-key-id: MY_ACCESS_KEY  # PLACEHOLDER - UPDATE THIS!
  # IMPORTANT: Replace this with your actual base64-encoded secret access key
  # echo -n "your-actual-secret-access-key" | base64  
  secret-access-key: MY_SECRET_KEY # PLACEHOLDER - UPDATE THIS!
---
apiVersion: v1
kind: Service
metadata:
  name: litellm-graviton
spec:
  selector:
    app: litellm-graviton
  ports:
  - port: 4000
    targetPort: 4000
  type: ClusterIP
